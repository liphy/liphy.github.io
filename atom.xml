<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>41 blog</title>
  
  <subtitle>Do fewer things, Better.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liphy.github.io/"/>
  <updated>2019-12-12T08:17:37.993Z</updated>
  <id>https://liphy.github.io/</id>
  
  <author>
    <name>41</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年读书总结</title>
    <link href="https://liphy.github.io/2019-reading-summary/"/>
    <id>https://liphy.github.io/2019-reading-summary/</id>
    <published>2019-12-09T07:52:00.000Z</published>
    <updated>2019-12-12T08:17:37.993Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\images\pasted-0.png" alt="books"></p><h3 id="这一年"><a href="#这一年" class="headerlink" title="这一年"></a>这一年</h3><p>2019年依然埋头读书。这一年读书不多，依然是尽量依照自己的兴趣去读。</p><p>固定的读书时间让我觉得心安。世事纷扰啊，成年人光是接触到书，都需要拨开重重迷雾，安心读上几页已是奢谈。于是格外珍惜读书时光。每个通勤的早晨，读书之前除了点餐之外不看手机。洗手坐定，拿出书，即开始一段全心投入的读书时间。</p><p>有时夜晚也能抽出一些时间来读上几页，无奈睡意及时将我击倒，坠入沉沉黑夜。</p><p>早晚读书，大有不同。早晨放空的大脑，纯粹、包容，对每一行字句都全盘接纳。<br>晚上读书，白天经历的一切都是阻碍，横亘在你和书之间，非要凭着坚决的意志推开层层阻碍，才见真章。</p><h3 id="读书类型总结"><a href="#读书类型总结" class="headerlink" title="读书类型总结"></a>读书类型总结</h3><h4 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h4><p>读了中东国家、土耳其方面的书，读了几本诗集。</p><h4 id="2019-最佳书目"><a href="#2019-最佳书目" class="headerlink" title="2019 最佳书目"></a>2019 最佳书目</h4><ul><li><p>「加缪手记（共三卷）」。加缪说「这个世纪的真相：因为历经了许多重大事件，我们开始习惯说谎。别再去管其余一切，只说出我内心最深处的那些。」学着加缪，在日记里说出内心最深处的那些。</p></li><li><p>「蒙田随笔」</p></li></ul><h3 id="读书介质"><a href="#读书介质" class="headerlink" title="读书介质"></a>读书介质</h3><ul><li><p>Kindle，轻便、随时阅读。</p></li><li><p>图书馆。纸质书依然是无法割舍，抚摸纸书的感觉真好。</p></li><li><p>微信读书，今年取消了听书，主要用来读读诗集。</p></li></ul><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><p>继续读某一专题的书。例如年初读了三岛由纪夫的「丰饶之海」四部曲之后，坠入了「三岛美学」的漩涡。</p><p>接下来专注专题读书：</p><ul><li>两次世界大战及交战国主题； </li><li>日本作者的书籍，川端康成、谷崎润一郎、永井荷风等。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;\images\pasted-0.png&quot; alt=&quot;books&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;这一年&quot;&gt;&lt;a href=&quot;#这一年&quot; class=&quot;headerlink&quot; title=&quot;这一年&quot;&gt;&lt;/a&gt;这一年&lt;/h3&gt;&lt;p&gt;2019年依然埋头读书。这一
      
    
    </summary>
    
    
      <category term="读书" scheme="https://liphy.github.io/categories/reading/"/>
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="2019" scheme="https://liphy.github.io/tags/2019/"/>
    
  </entry>
  
  <entry>
    <title>6：晴空一鹤排云上，夹岸桃花蘸水开</title>
    <link href="https://liphy.github.io/6/"/>
    <id>https://liphy.github.io/6/</id>
    <published>2019-09-24T05:11:26.000Z</published>
    <updated>2019-12-12T06:34:07.709Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这些生灵，小小的身体里满是自然的灵性，观察他们让我意识到我很幸运，作为自然生态中的一员，和它们一样，也是宇宙中一枚小小的生命。</p></blockquote><h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><p>「鳄鱼街」·「鸟」</p><p>这是「鳄鱼街」第二篇，如果说第一篇「八月」让我刚刚进入舒尔茨的语境还略显生疏，仅能够对只言片语产生赞美。那么第二篇「鸟」绝对让我惊艳并产生感同身受的共鸣，不是我曾经在自家阁楼养过鸟儿，我既没有阁楼也没有鸟蛋。但我曾经不止一次地观察身边的鸟儿，小蓝鹊、黑喜鹊、燕子、鸽子、鸥、鹤、鹈鹕、天鹅、乌鸦。这些生灵，小小的身体里满是自然的灵性，观察他们让我意识到我很幸运，作为自然生态中的一员，和它们一样，也是宇宙中一枚小小的生命。</p><p>小蓝鹊，很常见，灰蓝色的身体，微微向上倾斜的尾巴，给身体一种平衡的美感。他们喜欢在空地上停留嬉戏，喜欢在茂密的林间穿梭，喜欢在突出的枝干、雕塑、健身器材上停留。</p><p>黑喜鹊（黑白色）在家乡常见，他们总是欢快又吵闹，喜欢停留在公路旁的路灯、电线杆、灌木的顶端，警觉地看着行人，不停地呱噪几声。胆大点的会降落到路上找些吃的，遇到行人经过，又飞到不远的地方四处张望。</p><p>乌鸦，如果观察过喜鹊，你会更容易看出乌鸦和喜鹊的区别。</p><h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h2><ul><li>周末认识了一种树，栾树，挂着灯笼一样的果子，落地的花铺就一席嫩黄的地毯。</li><li>「夹岸桃花蘸水开」，出自宋代徐俯的「春游湖」，这一个「蘸」字写尽了我在水边的所见所想，再贴切不过了。</li><li>中华民族伟大复兴，不就是 Make China Great Again 吗？！</li><li>国家富强，民族振兴，人民幸福，损坏赔偿。<em>—-公交上的标语太多了，连在一起读顿感社会主义事业之伟大威严庄重，不容破坏。</em></li></ul><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;这些生灵，小小的身体里满是自然的灵性，观察他们让我意识到我很幸运，作为自然生态中的一员，和它们一样，也是宇宙中一枚小小的生命。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;书摘&quot;&gt;&lt;a href=&quot;#书摘&quot; class=&quot;headerlin
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="poem" scheme="https://liphy.github.io/tags/poem/"/>
    
      <category term="tree" scheme="https://liphy.github.io/tags/tree/"/>
    
      <category term="bird" scheme="https://liphy.github.io/tags/bird/"/>
    
  </entry>
  
  <entry>
    <title>5： 所有人都是残疾人</title>
    <link href="https://liphy.github.io/5/"/>
    <id>https://liphy.github.io/5/</id>
    <published>2019-06-11T07:11:26.000Z</published>
    <updated>2019-12-12T06:34:15.356Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/Xo2mwoA.jpg" alt="Antarctic"></p><h2 id="断章"><a href="#断章" class="headerlink" title="断章"></a>断章</h2><p><strong>20190606</strong></p><blockquote><p>新买的耳机戴了几天，</p><p>我又认识自己多了一些，</p><p>左耳孔大，右耳孔小。</p></blockquote><p><strong>20190610</strong></p><blockquote><p>现实中的网络审查固然可怕，</p><p>不及自我审查的百分之一，</p><p>呵呵呵。</p></blockquote><p><strong>20190611</strong></p><blockquote><p>西西弗的冷气很足，</p><p>我喜欢的书披了塑封，</p><p>我欣慰少许。</p></blockquote><h2 id="视听笔记"><a href="#视听笔记" class="headerlink" title="视听笔记"></a>视听笔记</h2><p><a href="https://movie.douban.com/subject/25947610/" target="_blank" rel="noopener">僵尸国度 第一季 (豆瓣)</a> 刷完了这部僵尸剧，相比 TWD 我更喜欢这部轻僵尸剧，戏谑、黑色幽默、嘲讽时政，总之看墨菲吃脑很下饭……</p><p>想看 <a href="https://movie.douban.com/subject/5160385/" target="_blank" rel="noopener">另一个地球 </a>  </p><h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><blockquote><p>他们身处富饶之中，却逐渐饥饿至死。</p></blockquote><p>– 2001:太空漫游，阿瑟·克拉克</p><blockquote><p>年轻时，我没受过多少系统教育，但什么书都读。读得最多的是诗，包括烂诗，我坚信烂诗早晚会让我邂逅好诗。</p></blockquote><p>– [哥伦比亚] 加西亚·马尔克斯，诺贝尔文学奖得主</p><blockquote><p>当有人说「我没什么敏感的话要说，隐私和安全问题与我无关」时反问她：为什么妳说的话总是那么不敏感？</p></blockquote><p>– <a href="https://blog.yitianshijie.net/2019/06/10/how-to-be-radical/" target="_blank" rel="noopener">如何反抗 – 一天世界</a> ，本文标题亦出自此文。</p><p>[<a href="https://www.douban.com/people/186017895/status/2502360232/" target="_blank" rel="noopener">极简主义如何改变你的生活的？</a></p><blockquote><p>1.不闲聊，不妄议，语言精炼极致；<br>2.不做无效社交，有闲暇时间宁可陪家人；<br>3.不断精进，把时间用在擅长的事情上。把复杂的问题简化处，简单的问题模式一化，模式的问题系统化；<br>4.穿着简洁、追求干净、舒适的自我体验，与其热衷大牌产品，更独爱个性/小众/定制产品；<br>5.服装颜色不超过3种，衣服只有那么几件，不会为穿什么而烦恼；<br>6.和果汁相比更爱水果，和饮料相比更爱茶；<br>7.喜欢自己做饭，热衷蔬菜，对肉的欲望减少；<br>8.和去健身房比起来，更喜欢自然的户外走路；<br>9.和刷屏看碎片化的信息相比，更喜欢阅读经典的书；<br>10.不需要阿臾别人来获得存在感；不需要靠贬低别人来获得优越感。</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://github.com/exiftool/exiftool" target="_blank" rel="noopener">exiftool</a> 一个读、写文件 meta information 的工具。支持<a href="http://owl.phy.queensu.ca/~phil/exiftool/#features" target="_blank" rel="noopener">众多</a>文件格式，典型应用是读取照片的拍摄设备、焦距、拍摄地点等等。<a href="http://owl.phy.queensu.ca/~phil/exiftool/" target="_blank" rel="noopener">这里</a>有可执行文件供下载。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Xo2mwoA.jpg&quot; alt=&quot;Antarctic&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;断章&quot;&gt;&lt;a href=&quot;#断章&quot; class=&quot;headerlink&quot; title=&quot;断章&quot;&gt;&lt;/a&gt;断章&lt;/h2&gt;&lt;p&gt;&lt;st
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="poem" scheme="https://liphy.github.io/tags/poem/"/>
    
  </entry>
  
  <entry>
    <title>4：万水千山皆过客，惟有读书是故乡</title>
    <link href="https://liphy.github.io/4/"/>
    <id>https://liphy.github.io/4/</id>
    <published>2019-05-27T09:27:00.000Z</published>
    <updated>2019-12-09T08:58:26.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="诗歌-｜焦虑"><a href="#诗歌-｜焦虑" class="headerlink" title="诗歌 ｜焦虑"></a>诗歌 ｜焦虑</h2><blockquote><p>我在紧张什么？</p><p>准备工作已经做好啦，</p><p>我的紧张来自对未知的忧虑，</p><p>对未来的茫然，</p><p>对虚无的幻想。</p><p>阵地已失，</p><p>城池尽毁，</p><p>刀剑并弃，</p><p>盔甲也柔软，</p><p>一个孤独的战士。</p></blockquote><h2 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h2><p>2019.5.24</p><p>用一天的时间读完「北海道物语」，<br>在用一个夜晚思索人生。</p><p>2019.5.26</p><blockquote><p>「万水千山皆过客，惟有读书是故乡。」</p></blockquote><p>周末从图书馆借来两本书，一本是从另类角度看纳粹，一本是讲述哈布斯堡王朝的历史。</p><p> <a href="https://book.douban.com/subject/30230911/" target="_blank" rel="noopener">亢奋战 (豆瓣)</a> 嗑药的德国，兴奋剂撑起的帝国。</p><p><a href="https://book.douban.com/subject/26751893/" target="_blank" rel="noopener">哈布斯堡的灭亡 (豆瓣)</a> 看了开头，对着地图，对奥匈帝国的疆域有个大致掌握。</p><p>2019.2.25</p><p>读完了「究竟之旅」，西域如此让人着迷，却不能轻易涉足。</p><h2 id="视听笔记"><a href="#视听笔记" class="headerlink" title="视听笔记"></a>视听笔记</h2><p>2019.5.26</p><p>「不能成为野兽的我们」是最近在看的一部日剧，新垣结衣主演一个“耐操”的 IT 职员，虽然生活、工作上面临着重重压力，依然能保持傻傻的微笑，有点励志。同时喜欢“恒星”的高冷。</p><p>2019.5.21</p><p>博物志 #142 把观念挂在墙上</p><ul><li>春夏之交推出死亡系列小黄鱼贴纸！</li><li>贝浩登画廊</li><li>怎么欣赏观念艺术：视觉感知作品美-了解观念-摸索实质</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;诗歌-｜焦虑&quot;&gt;&lt;a href=&quot;#诗歌-｜焦虑&quot; class=&quot;headerlink&quot; title=&quot;诗歌 ｜焦虑&quot;&gt;&lt;/a&gt;诗歌 ｜焦虑&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我在紧张什么？&lt;/p&gt;
&lt;p&gt;准备工作已经做好啦，&lt;/p&gt;
&lt;p&gt;我的紧张来自对未
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="poem" scheme="https://liphy.github.io/tags/poem/"/>
    
  </entry>
  
  <entry>
    <title>3：伟大的诗人从不读诗</title>
    <link href="https://liphy.github.io/3/"/>
    <id>https://liphy.github.io/3/</id>
    <published>2019-05-20T04:12:11.000Z</published>
    <updated>2019-05-21T10:03:30.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-5-20-Mon"><a href="#2019-5-20-Mon" class="headerlink" title="2019-5-20 Mon"></a>2019-5-20 Mon</h2><p><strong>一键复制网页的 URL 和 Title 的 Markdown 格式</strong></p><p>使用这个 <a href="https://chrome.google.com/webstore/detail/copy-title-and-url-as-mar/fpmbiocnfbjpajgeaicmnjnnokmkehil/related?hl=en" target="_blank" rel="noopener">Copy Title and Url as Markdown Style - Chrome Web Store</a> Chrome 扩展一键复制网址和标题的 Markdown 格式，可以高效添加引用来源。Firefox 可以使用这个 <a href="https://addons.mozilla.org/en-GB/firefox/addon/copy-as-markdown/?src=search" target="_blank" rel="noopener">Copy as Markdown – Get this Extension for 🦊 Firefox (en-GB)</a>。</p><p><strong>短诗</strong></p><blockquote><p>打桩机亲吻地球，过于猛烈狂野<br>少年身上的字母串起陌生的联想<br>鲍勃迪伦大烟嗓悠悠地唱。</p></blockquote><h2 id="2019-5-19-Sun"><a href="#2019-5-19-Sun" class="headerlink" title="2019-5-19 Sun"></a>2019-5-19 Sun</h2><p><strong>短诗</strong> 2:46 PM @湖北省图书馆</p><blockquote><p>伟大的诗人<br>从不读诗<br>我翻开奇迹集</p></blockquote><h2 id="2019-5-18-Sat"><a href="#2019-5-18-Sat" class="headerlink" title="2019-5-18 Sat"></a>2019-5-18 Sat</h2><p><a href="https://movie.douban.com/subject/5300054/" target="_blank" rel="noopener">波西米亚狂想曲 (豆瓣)</a> ，等了几周，不停看着排片表，终于在电影院看了这部Queen 主唱 Freddie Mercury 的传记电影。诺大的影院只有不到10人观看，而隔壁的「复联」则爆满。有位白发中年朋友孤寂地坐在走道一侧，平静地观看。散场后他用地图搜索路线，大概是像我一样远道而来。</p><p>Queen 绝对是历史最牛逼的乐队之一，每个人都是词曲全才。Live Aid现场看得热泪盈眶。等我开始倾听他们，他们已经老去，好在音乐不老。</p><h2 id="2019-5-17-Fri"><a href="#2019-5-17-Fri" class="headerlink" title="2019-5-17 Fri"></a>2019-5-17 Fri</h2><p><strong>播客 「Web Viewer」12 期：从独立电子杂志开始说起</strong></p><ul><li><p>采访电子杂志「城堡」的作者南百城,</p></li><li><p>固定栏目包括语录、书评、文章（链接，写简评）</p></li><li><p>探索、扩展知识的边界。</p></li></ul><h2 id="2019-5-15-Wed"><a href="#2019-5-15-Wed" class="headerlink" title="2019-5-15 Wed"></a>2019-5-15 Wed</h2><p><strong>「炮火将至」</strong>，89分钟喂狗时间，这片子真是无厘头，瞎选片害死人。</p><p>梅林固件还是不稳定啊，Software Center 要么打不开，要么是显示已安装为 0，看来要考虑一下老毛子、openwrt 官方试试了。</p><p>读了几页单读，发现翻译不用心，有明显的错误；然后是标点符号使用不规范，出现逗号和书名号挤在一起的情况。希望这些小瑕疵不要影响阅读体验。</p><p><strong>「提前怀旧」 #12 不埋屎的小猫都死了</strong>提到的保护隐私的方法：</p><ul><li>密码管理工具用起来 //done</li><li>电脑摄像头遮挡起来 //done</li><li>提示问题假答案，使用密码管理工具记录</li><li>硬盘数据加密🔐</li><li>重要邮件加密</li><li><strong>虚拟机，快照回退 </strong>  //这一点可操作</li><li>两部手机</li><li>不要用来路不明的充电线，不乱点「信任」 //done</li><li>尽量不要使用公共 Wi-Fi，如果用，所有流量走 VPN。 //done</li></ul><p><strong>找优质信息的窍门</strong> </p><p>原创： FENG哥 bymfeng</p><p>你掌握信息的质量越高，你思考的质量就越高。掌握优质信息的根本在于你对信息有判断力。在你的判断力还没有成长好的时候，here are a few tips to get you started:</p><p>1. 推荐大家多去看看英语的材料。目前中文的信息，除了跟中国市场最紧密相关的，其他多数是来自翻译，所以不管从信息源选择，翻译质量，速度，你如果能够直接读原文，那就有优势。当然，前提是你有一定英文水平 – nobody said it was going to be easy;</p><p>2. 著名大学的材料是一个不错的起点。很多大学把自己的课程免费、完整的放在网上，任你获取。这些内容的理解消化，需要你付出努力，可能不如那些 “每天5分钟听一本书“ 那么简单，但是你的收获会大得多 (again, nobody said it was going to be easy);</p><p>3. 每个领域有自己的靠谱机构、个人，他们中有些人乐于分享。找到这些机构和个人的窍门在于，先找到一个。这第一个人往往会引用其他人的作品和观点，你顺藤摸瓜，很快就能积累一个名单。如果你感兴趣投资的话，可以从 巴菲特、芒格开始。如果你感兴趣创业，可以开始看 Paul Graham, Sam Altman, YC, a16z, Peter Thiel 的 blog, podcast 开始。These should get you started. </p><p>Good luck.</p><h2 id="2019-5-14-Tue"><a href="#2019-5-14-Tue" class="headerlink" title="2019-5-14 Tue"></a>2019-5-14 Tue</h2><p><strong>短诗</strong></p><blockquote><p>被雨征服一夜<br>好过10年漫长的痛哭<br>今夜我陷落在沙发里</p></blockquote><p><a href="https://book.douban.com/subject/30210720/" target="_blank" rel="noopener"><strong>究竟之旅 (豆瓣)</strong></a> by  [美]理查德·伯恩斯坦</p><ul><li>西安，西行的起点。</li><li>兰州</li><li>凉州</li><li>嘉峪关</li><li>柳园</li><li>星星峡</li><li>哈密</li><li>高昌，那时是高昌国</li><li>吐鲁番</li><li>库车</li><li>阿克苏</li><li>喀什</li><li>吐尔乃特口岸</li><li>……</li></ul><p><strong>想读</strong></p><ul><li>巴巴拉·W·塔奇曼 的作品，之前已经读过她的描写一战的<a href="https://book.douban.com/subject/30258604/" target="_blank" rel="noopener">八月炮火 (豆瓣)</a>，精彩绝伦，让人不禁怀疑<strong>这么多有缺陷的决策者如何打好一场战争？</strong>！</li><li>美剧「Atlanta」</li><li>永井荷风「深川之歌」</li><li>中山晋平</li><li>竹九梦二</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2019-5-20-Mon&quot;&gt;&lt;a href=&quot;#2019-5-20-Mon&quot; class=&quot;headerlink&quot; title=&quot;2019-5-20 Mon&quot;&gt;&lt;/a&gt;2019-5-20 Mon&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;一键复制网页的 URL 和 Titl
      
    
    </summary>
    
    
    
      <category term="Bohemian Rhapsody" scheme="https://liphy.github.io/tags/Bohemian-Rhapsody/"/>
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="短诗" scheme="https://liphy.github.io/tags/%E7%9F%AD%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>2：事物的味道，我尝得太早了</title>
    <link href="https://liphy.github.io/2/"/>
    <id>https://liphy.github.io/2/</id>
    <published>2019-05-13T03:12:11.000Z</published>
    <updated>2019-06-11T09:14:16.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-05-13-Mon"><a href="#2019-05-13-Mon" class="headerlink" title="2019-05-13 Mon"></a>2019-05-13 Mon</h2><h3 id="「究竟之旅」"><a href="#「究竟之旅」" class="headerlink" title="「究竟之旅」"></a>「究竟之旅」</h3><p>本周开始读理查德·伯恩斯坦「究竟之旅」，是作者记录重走玄奘西行之路的一本书。</p><p>作者从香港直飞西安。那里正是玄奘西行的起点。追寻大师的脚步，以一个外国人的视角来观察玄奘走过的地方。</p><p>好奇那个时代，国门紧闭，一个僧侣徒步穿越高山、荒漠、河流，面对异国的陌生与隔阂，探寻佛法经文。有所敬畏无所畏惧。</p><p>伯恩斯坦的「究竟之旅」路线：</p><p>西安-兰州-凉州-嘉峪关-柳园-星星峡-哈密-高昌-吐鲁番-库车-阿克苏-喀什-吐尔乃特口岸</p><h3 id="「单读15·我们的黄金时代」"><a href="#「单读15·我们的黄金时代」" class="headerlink" title="「单读15·我们的黄金时代」"></a>「单读15·我们的黄金时代」</h3><p><img src="https://i.imgur.com/mFeOGKh.jpg" alt="单读15·我们的黄金时代"></p><p>多抓鱼上购买的单读系列之一「我们的黄金时代」，不到20元，塑封，成色完好，挺满意。</p><p>之前在多抓鱼买了4本「读库」系列。读了2本，刚开始读非虚构作品，不太合口味。</p><h3 id="有趣的文章"><a href="#有趣的文章" class="headerlink" title="有趣的文章"></a>有趣的文章</h3><p><a href="https://writing.markchristian.org/2019/04/29/personal-web-sites/?c=1" target="_blank" rel="noopener">You should have a personal web site</a>  为什么你需要有个个人网站。在这个微博、微信泛滥的时代，博客已经是个稀罕的物件。</p><h3 id="工作与成就感"><a href="#工作与成就感" class="headerlink" title="工作与成就感"></a>工作与成就感</h3><blockquote><p>我的工作压力很大，我能想到的唯一应对方法就是努力投入工作，这是我释放压力的唯一途径。</p></blockquote><p>– <a href="http://www-history.mcs.st-and.ac.uk/Extras/Turing_running.html" target="_blank" rel="noopener">艾伦·图灵</a>。他的马拉松成绩是2小时46.03分钟，有人问他为什么刻苦地训练长跑，他做了上面的回答。</p><h3 id="有趣的事物"><a href="#有趣的事物" class="headerlink" title="有趣的事物"></a>有趣的事物</h3><ul><li>在线生成头像 <a href="https://getavataaars.com/?accessoriesType=Blank&amp;avatarStyle=Transparent&amp;clotheColor=Gray02&amp;clotheType=ShirtCrewNeck&amp;eyeType=Squint&amp;eyebrowType=DefaultNatural&amp;facialHairColor=Black&amp;facialHairType=Blank&amp;graphicType=Cumbia&amp;hairColor=Black&amp;hatColor=Gray02&amp;mouthType=Default&amp;skinColor=Light&amp;topType=ShortHairShortFlat" target="_blank" rel="noopener">avataaars generator</a></li></ul><p><img src="https://i.imgur.com/uzGY47R.png" alt="头像"></p><ul><li><p>没有安装音乐播放器，可以使用 <a href="https://github.com/scscms/scscmsMusic" target="_blank" rel="noopener">Chrome 浏览器听歌</a>，扩展在<a href="[https://chrome.google.com/webstore/detail/scscms%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/djkddblnfgendjoklmfmocaboelkmdkm/related?hl=zh-CN](https://chrome.google.com/webstore/detail/scscms音乐播放器/djkddblnfgendjoklmfmocaboelkmdkm/related?hl=zh-CN">这里</a>)，当然大家现在都习惯使用在线音乐服务，比如小云、小狗、小度、小虾……</p></li><li><p>城堡阅读周刊](<a href="https://chengbao.bitcron.com/)，由阅读爱好者制作，Markdown" target="_blank" rel="noopener">https://chengbao.bitcron.com/)，由阅读爱好者制作，Markdown</a> 排版的网络独立杂志。</p></li></ul><h3 id="诗歌"><a href="#诗歌" class="headerlink" title="诗歌"></a>诗歌</h3><p>自从在西西弗书店读了周作人翻译的石川啄木的「<a href="https://book.douban.com/subject/30316751/" target="_blank" rel="noopener">石川啄木短歌</a> 」之后，对短歌这种形式的诗歌着迷起来。</p><blockquote><p>歌这东西是不会灭亡的。</p><p>我们因了这个，</p><p>也就能够使那爱惜刹那的生命之心得到满足了。</p></blockquote><p>心心念着他的下一本诗集<a href="https://book.douban.com/subject/26759579/" target="_blank" rel="noopener">「事物的味道，我尝得太早了」</a>。</p><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><p><a href="https://open.spotify.com/album/6hWzVc1ZqG5o7VquCX4ZPr" target="_blank" rel="noopener">心要野</a> by Queen Sea Big Shark</p><p><a href="https://open.spotify.com/album/7wOOA7l306K8HfBKfPoafr" target="_blank" rel="noopener">rape me</a>  by Nirvana</p><p>听这两首歌分别是在上班前和下班后，忽然觉得有种为人类的劳作歌唱的感觉。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2019-05-13-Mon&quot;&gt;&lt;a href=&quot;#2019-05-13-Mon&quot; class=&quot;headerlink&quot; title=&quot;2019-05-13 Mon&quot;&gt;&lt;/a&gt;2019-05-13 Mon&lt;/h2&gt;&lt;h3 id=&quot;「究竟之旅」&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="单读" scheme="https://liphy.github.io/tags/%E5%8D%95%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>1：Queen Sea Big Shark</title>
    <link href="https://liphy.github.io/1/"/>
    <id>https://liphy.github.io/1/</id>
    <published>2019-05-10T13:14:24.000Z</published>
    <updated>2019-05-28T07:50:36.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-05-10"><a href="#2019-05-10" class="headerlink" title="2019-05-10"></a>2019-05-10</h2><p>昨日听无状态（ blackout <a href="http://nirokita.cn/episodes/1" target="_blank" rel="noopener">http://nirokita.cn/episodes/1</a> ）播客提到后海大鲨鱼乐队，对这个乐队还有个英文名 「Queen Sea Big Shark」。一直以为后海是 Back Sea，翻译成 Queen Sea 顿时逼格升了几档。乐队先是写英文歌的，后来转写中文歌。</p><p>在 Spotify 上听了三首歌，「偷月亮的人」、「心要野」、「Go Down The Line」，觉得非常不错啊。曲子不是无力的衬托，声音也非常出色。</p><p>Pierre 还谈到他去参加 Fuji Rock Festival(FRF) 现场的体验，这是个下雨的天看的音乐节，日本市民逛音乐的热情很高，往往是呼朋唤友携家带口，备上雨衣、雨鞋、防水帐篷去的。在 Youtube 上看了几个现场视频，很燃，想去，想学日语。</p><h2 id="2019-05-06"><a href="#2019-05-06" class="headerlink" title="2019-05-06"></a>2019-05-06</h2><p>1985年7月13日 Queen LIVE AID 演唱会无疑是历史上最伟大的现场。 <a href="https://www.youtube.com/watch?v=A22oy8dFjqc" target="_blank" rel="noopener">https://www.youtube.com/watch?v=A22oy8dFjqc</a></p><h2 id="2019-04-13"><a href="#2019-04-13" class="headerlink" title="2019-04-13"></a>2019-04-13</h2><p>人与人之间的沟通，时刻透露着一种无力感。沟通导致的理解差异正让事情变糟糕。</p><p>首先是表达的能力的差异化。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2019-05-10&quot;&gt;&lt;a href=&quot;#2019-05-10&quot; class=&quot;headerlink&quot; title=&quot;2019-05-10&quot;&gt;&lt;/a&gt;2019-05-10&lt;/h2&gt;&lt;p&gt;昨日听无状态（ blackout &lt;a href=&quot;http://nirok
      
    
    </summary>
    
    
    
      <category term="podcast" scheme="https://liphy.github.io/tags/podcast/"/>
    
      <category term="Bohemian Rhapsody" scheme="https://liphy.github.io/tags/Bohemian-Rhapsody/"/>
    
      <category term="Queen" scheme="https://liphy.github.io/tags/Queen/"/>
    
  </entry>
  
  <entry>
    <title>0：不可思议，只可意会</title>
    <link href="https://liphy.github.io/0/"/>
    <id>https://liphy.github.io/0/</id>
    <published>2019-05-05T14:12:34.000Z</published>
    <updated>2019-12-12T08:03:06.475Z</updated>
    
    <content type="html"><![CDATA[<p>「不可思议」在汉传佛教中既有奇异的、稀有的、绝妙的、常人意想不到奇迹，可以是指佛的智慧与神通；</p><p>因常人的智慧不能思惟，所以不能够或不应该思惟议论的事项，包含了无关解脱的事情不应该去思惟议论的含义。</p><p>所见所闻，不可思议。<br>不可思议，只可意会。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;「不可思议」在汉传佛教中既有奇异的、稀有的、绝妙的、常人意想不到奇迹，可以是指佛的智慧与神通；&lt;/p&gt;
&lt;p&gt;因常人的智慧不能思惟，所以不能够或不应该思惟议论的事项，包含了无关解脱的事情不应该去思惟议论的含义。&lt;/p&gt;
&lt;p&gt;所见所闻，不可思议。&lt;br&gt;不可思议，只可意会。
      
    
    </summary>
    
    
    
      <category term="博客" scheme="https://liphy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="nfknblvbl" scheme="https://liphy.github.io/tags/nfknblvbl/"/>
    
      <category term="不可思议" scheme="https://liphy.github.io/tags/%E4%B8%8D%E5%8F%AF%E6%80%9D%E8%AE%AE/"/>
    
      <category term="分享主义" scheme="https://liphy.github.io/tags/%E5%88%86%E4%BA%AB%E4%B8%BB%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>诗 | 春住</title>
    <link href="https://liphy.github.io/april/"/>
    <id>https://liphy.github.io/april/</id>
    <published>2019-04-09T07:14:08.014Z</published>
    <updated>2019-04-09T07:17:59.658Z</updated>
    
    <content type="html"><![CDATA[<p>四月不住</p><p>2019.4.8</p><p>马褂木满树柔情每个清晨越发圆润透明,</p><p>樱花吧，前几年爱的慌，近年不敢近赏，怕动了春心。</p><p>香樟，最解我心，每一片叶子闪烁着太阳的光辉。</p><p>这个夏天，我又认识了新植物。</p><p>紫薇，黄鹤楼下那一株，老得剩几截白骨。</p><p>紫荆，也许纳博科夫会为它赋诗一首。</p><p>迎春花，太过热情。</p><p>榉树，树如其名。</p><p>朴树，像那个同名歌手，低调深沉。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;四月不住&lt;/p&gt;
&lt;p&gt;2019.4.8&lt;/p&gt;
&lt;p&gt;马褂木满树柔情每个清晨越发圆润透明,&lt;/p&gt;
&lt;p&gt;樱花吧，前几年爱的慌，近年不敢近赏，怕动了春心。&lt;/p&gt;
&lt;p&gt;香樟，最解我心，每一片叶子闪烁着太阳的光辉。&lt;/p&gt;
&lt;p&gt;这个夏天，我又认识了新植物。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
      <category term="poem" scheme="https://liphy.github.io/tags/poem/"/>
    
      <category term="诗歌" scheme="https://liphy.github.io/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>诗 | 在路上</title>
    <link href="https://liphy.github.io/on-road/"/>
    <id>https://liphy.github.io/on-road/</id>
    <published>2019-03-25T05:02:44.804Z</published>
    <updated>2019-05-10T09:12:21.458Z</updated>
    
    <content type="html"><![CDATA[<p>云出霞光满，<br>人归夕阳斜。<br>东天一片月，<br>共浴一清辉。</p><p>BTW:</p><p>从那湖中穿过，像穿越一个通透的 channel。</p><p>晨，天幕将启。</p><p>昏，霞光满天。</p><p>啊，早春澄澈的天宇！ </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;云出霞光满，&lt;br&gt;人归夕阳斜。&lt;br&gt;东天一片月，&lt;br&gt;共浴一清辉。&lt;/p&gt;
&lt;p&gt;BTW:&lt;/p&gt;
&lt;p&gt;从那湖中穿过，像穿越一个通透的 channel。&lt;/p&gt;
&lt;p&gt;晨，天幕将启。&lt;/p&gt;
&lt;p&gt;昏，霞光满天。&lt;/p&gt;
&lt;p&gt;啊，早春澄澈的天宇！ &lt;/p&gt;
&lt;sc
      
    
    </summary>
    
    
    
      <category term="poem" scheme="https://liphy.github.io/tags/poem/"/>
    
      <category term="诗歌" scheme="https://liphy.github.io/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>overflow 过载</title>
    <link href="https://liphy.github.io/overflow/"/>
    <id>https://liphy.github.io/overflow/</id>
    <published>2019-03-18T13:46:50.000Z</published>
    <updated>2019-05-13T08:18:55.117Z</updated>
    
    <content type="html"><![CDATA[<p><strong>overflow</strong></p><p>2019年3月19日</p><p>邻座的小伙游戏升级了，前排的姑娘小说看到了一千四百八十回。</p><p>就这么无聊，通勤路上，我不看自己的手机，却认真看起了别人的手机。</p><p>信息过载，让我想远离手机；信息过载，我想知道他人如何应对纷至沓来的信息。</p><p><strong>做减法</strong></p><p>铁打的手机，流水的 apps 。</p><p>那些最终精简下来的 apps 才是我需要的</p><p>Inoreader， 一款 RSS 阅读器。使用 RSS 的人不多了，这很古典，但最高效。</p><p>Flipboard，国内叫红板报，也是一个内容聚合器。我主要拿来订阅关于地图的杂志（每个合集叫杂志），它的好处就是单页瀑布流，可以一直不停地刷。拿来看图片类的信息非常实用。</p><p>Nuzzel， 随便翻翻。</p><p><strong>分享</strong></p><ol><li><a href="http://techreview.social/7" target="_blank" rel="noopener">社会人科技评论第7期</a> 里谈到了主播和李如一开源了<a href="https://github.com/generalized-intelligence/gi-Chinese-Style-Guide" target="_blank" rel="noopener">泛化智能（gi）文风指南</a>。正如文中说的“这是一份为中文用户撰写的文风指南（style guide）。<strong>它并非任何意义上的标准</strong>，而是泛化智能公司内部所采用的指南。”</li><li>阮一峰的<a href="http://www.ruanyifeng.com/blog/weekly/" target="_blank" rel="noopener">干货分享</a>，非常干！</li><li>郝海龙的<a href="http://haohailong.net/" target="_blank" rel="noopener">个人网站</a>，慢慢翻。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;overflow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2019年3月19日&lt;/p&gt;
&lt;p&gt;邻座的小伙游戏升级了，前排的姑娘小说看到了一千四百八十回。&lt;/p&gt;
&lt;p&gt;就这么无聊，通勤路上，我不看自己的手机，却认真看起了别人的手机。&lt;/p&gt;
&lt;p&gt;信息过载，让我想远
      
    
    </summary>
    
    
    
      <category term="overflow" scheme="https://liphy.github.io/tags/overflow/"/>
    
      <category term="life" scheme="https://liphy.github.io/tags/life/"/>
    
      <category term="share" scheme="https://liphy.github.io/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>Back to Blog</title>
    <link href="https://liphy.github.io/back-to-blog/"/>
    <id>https://liphy.github.io/back-to-blog/</id>
    <published>2019-03-05T05:50:20.000Z</published>
    <updated>2019-05-10T09:12:44.519Z</updated>
    
    <content type="html"><![CDATA[<p>摆脱仪式感</p><p>李如一刚刚<a href="https://t.me/yifenshijie/2973" target="_blank" rel="noopener">宣布</a>不再更新 telegram channel <a href="https://t.me/yifenshijie" target="_blank" rel="noopener">《一天世界》的渣渣：一分世界</a>，<a href="https://blog.yitianshijie.net/" target="_blank" rel="noopener">一天世界</a>博客继续更新，这是好事。</p><p>这几天看了迟早更新主播的<a href="">博客</a>，和BYM主播的何峰的<a href="https://www.zhihu.com/people/fenggebym/activities">知乎专栏</a>，内容涉猎很广，可见他们都读地很多、看地很多。才能不间断地输出。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;摆脱仪式感&lt;/p&gt;
&lt;p&gt;李如一刚刚&lt;a href=&quot;https://t.me/yifenshijie/2973&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;宣布&lt;/a&gt;不再更新 telegram channel &lt;a href=&quot;https://t.m
      
    
    </summary>
    
    
    
      <category term="blog" scheme="https://liphy.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="https://liphy.github.io/tags/hexo/"/>
    
      <category term="writing" scheme="https://liphy.github.io/tags/writing/"/>
    
  </entry>
  
  <entry>
    <title>你说外星有没有生命？</title>
    <link href="https://liphy.github.io/anybody-here/"/>
    <id>https://liphy.github.io/anybody-here/</id>
    <published>2019-03-04T09:31:00.000Z</published>
    <updated>2019-03-05T08:47:21.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>银河应该有适合人类生存的星球吧？</li><li>也许会有，但是人类只配呆在地球吧。</li></ul><p>达不到光速，无法探求宇宙的奥秘便遥不可及。</p><p>有个段子说：<br>「人类要是可以达到光速<br>可以自己X自己！」</p><p>生命究竟何去何从？<br>像河流，有没有一片大海是它的归宿？<br>像远山，历经沧桑化为桑田？</p><p>当蝴蝶振翅，<br>当阳光降临，<br>我想褪去，<br>沉重的肉身。</p><p>Gravity is my destiny。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;银河应该有适合人类生存的星球吧？&lt;/li&gt;
&lt;li&gt;也许会有，但是人类只配呆在地球吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;达不到光速，无法探求宇宙的奥秘便遥不可及。&lt;/p&gt;
&lt;p&gt;有个段子说：&lt;br&gt;「人类要是可以达到光速&lt;br&gt;可以自己X自己！」&lt;/p&gt;
&lt;p&gt;生命
      
    
    </summary>
    
    
    
      <category term="life" scheme="https://liphy.github.io/tags/life/"/>
    
      <category term="earth" scheme="https://liphy.github.io/tags/earth/"/>
    
  </entry>
  
  <entry>
    <title>2018年读书总结</title>
    <link href="https://liphy.github.io/2018-reading-summary/"/>
    <id>https://liphy.github.io/2018-reading-summary/</id>
    <published>2019-01-01T14:52:02.000Z</published>
    <updated>2019-03-19T09:14:06.477Z</updated>
    
    <content type="html"><![CDATA[<p>2018年读书数量稳步增长，我希望通过量的积累营造阅读的感觉。</p><p><strong>三体</strong></p><p>年初读了《三体》，这一年余下的时光都在回味三体。</p><p>我们对世界的认识刚刚从二维展开到三维的层面，智子却可以利用降维攻击来对付人类的舰队。</p><p>智子锁死了科技发展，使得地球的科技几百年没有质的飞跃。这让我想到另外一种可能，智子会不会通过篡改，使得1+1≠2，从而破坏自然界最基本的数学逻辑，使得计算科学的根基发生动摇，一切规则变成虚无缥缈的空中楼阁。</p><p>2019年第一天，NASA “新视野”号（New Horizons）飞跃一个昵称为“天涯海角”（Ultima Thule）的太阳系边缘天体。寻找星外文明的努力是否会招来如三体一般的高等生命体呢？</p><p><strong>南极与北极</strong></p><p>从图书馆借了《世界上最糟糕的旅行》、《冰雪王国》，一个南极，一个北极，同样冰天雪地。两个男人，征服了自己，却输给了寒冷。</p><p>一边读，一边在 Google Maps 上标注出斯科特和德隆的轨迹，跟随他们的脚步，接近那次寒冷与孤独的伟大旅程。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年读书数量稳步增长，我希望通过量的积累营造阅读的感觉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;年初读了《三体》，这一年余下的时光都在回味三体。&lt;/p&gt;
&lt;p&gt;我们对世界的认识刚刚从二维展开到三维的层面，智子却可以利用降维攻击来对付人类的
      
    
    </summary>
    
    
    
      <category term="2018" scheme="https://liphy.github.io/tags/2018/"/>
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="读书" scheme="https://liphy.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>白衣飘飘的年代</title>
    <link href="https://liphy.github.io/a-singer/"/>
    <id>https://liphy.github.io/a-singer/</id>
    <published>2018-11-18T10:52:02.000Z</published>
    <updated>2019-03-19T09:13:57.545Z</updated>
    
    <content type="html"><![CDATA[<p>有期一席请来了叶蓓，对，就是唱「白衣飘飘的年代」的那个叶蓓，40岁的声音依旧甜美、空灵。</p><p>仿佛时间没有在她的声音里留下痕迹。</p><p>记得上学时特别喜欢她的歌，比如「白衣飘飘的年代」、与老狼合唱「青春无悔」。</p><p>她在一席讲了与高晓松结缘，并成为歌手的历程。也算是歪打正着，差一点失去一个美好的声音。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有期一席请来了叶蓓，对，就是唱「白衣飘飘的年代」的那个叶蓓，40岁的声音依旧甜美、空灵。&lt;/p&gt;
&lt;p&gt;仿佛时间没有在她的声音里留下痕迹。&lt;/p&gt;
&lt;p&gt;记得上学时特别喜欢她的歌，比如「白衣飘飘的年代」、与老狼合唱「青春无悔」。&lt;/p&gt;
&lt;p&gt;她在一席讲了与高晓松结缘，并成
      
    
    </summary>
    
    
    
      <category term="music" scheme="https://liphy.github.io/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客同步管理</title>
    <link href="https://liphy.github.io/sync-hexo-blog/"/>
    <id>https://liphy.github.io/sync-hexo-blog/</id>
    <published>2018-04-26T12:31:00.000Z</published>
    <updated>2019-03-19T09:14:13.805Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Hexo + Github Pages 搭建个人博客，如果想在不同的终端写博客，就需要保证终端的配置和静态文件保持一致，否者在多端执行 hexo d -g 后会出现不一样的情况。</p><p>我的同步方案是使用坚果云同步整个 blog 文件夹，这样能保持多端修改能够自动同步。</p><p>有大神说建个 repo，待我 git 学习好了再试。</p><p>2019年2月15日 uodate:</p><p>照着这篇文章搞定了：<a href="https://www.jianshu.com/p/fceaf373d797" target="_blank" rel="noopener">hexo博客同步管理及迁移</a></p><p>步骤：</p><p>在原电脑上操作，给 <a href="https://link.zhihu.com/?target=http%3A//username.github.io">username.github.io</a> 博客仓库创建hexo分支，并设为默认分支。（具体可参考<a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/0b1fccce74e0">这篇文章</a>的操作，有图示）</p><p>如果未给你的 github 账号添加过当前电脑生成的 ssh key，需要创建 ssh key 并添加到 github 账号上。（如何创建和添加 <a href="https://link.zhihu.com/?target=https%3A//help.github.com/articles/connecting-to-github-with-ssh/">github help</a> 就有）</p><p>随便一个目录下，命令行执行 git clone <a href="mailto:git@github.com">git@github.com</a>:username/username.github.io.git 把仓库 clone 到本地。</p><p>显示所有隐藏文件和文件夹，进入刚才 clone 到本地的仓库，删掉除了 .git 文件夹以外的所有内容。</p><p>命令行 cd 到 clone 的仓库，git add -A ，git commit -m “–”，git push origin hexo，把刚才删除操作引起的本地仓库变化更新到远程，此时刷新下 github 端博客hexo分支，应该已经被清空了。</p><p>将上述 .git 文件夹复制到本机本地博客根目录下（即含有 themes、source 等文件夹的那个目录），现在可以把上述 clone 的本地仓库删掉了，因为它已经没有用了，本机博客目录已经变成可以和 hexo 分支相连的仓库了。</p><p>将博客目录下 themes 文件夹下每个主题文件夹里面的 .git .gitignore 删掉。</p><p> cd 到博客目录，git add -A ，git commit -m “–”，git push origin hexo，将博客目录下所有文件更新到 hexo 分支。如果上一步没有删掉 .git .gitignore，主题文件夹下内容将传不上去。至此原电脑上的操作结束。</p><p><strong>在新电脑上操作，先把新电脑上环境安装好，node.js、git、hexo，ssh key 也创建和添加好。</strong></p><p><strong>选好博客安装的目录，执行  git clone <a href="mailto:git@github.com">git@github.com</a>:username/username.github.io.git</strong> </p><p><strong>cd 到博客目录，npm install、hexo g  &amp;&amp; hexo s，安装依赖，生成和启动博客服务。正常的话，浏览器打开 localhost:4000 可以看到博客了。至此新电脑操作完毕。</strong></p><p><strong>以后无论在哪台电脑上，更新以及提交博客，依次执行，git pull，git add -A ，git commit -m “–”，git push origin hexo，hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 即可。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 Hexo + Github Pages 搭建个人博客，如果想在不同的终端写博客，就需要保证终端的配置和静态文件保持一致，否者在多端执行 hexo d -g 后会出现不一样的情况。&lt;/p&gt;
&lt;p&gt;我的同步方案是使用坚果云同步整个 blog 文件夹，这样能保持多端修改能够
      
    
    </summary>
    
    
    
      <category term="blog" scheme="https://liphy.github.io/tags/blog/"/>
    
      <category term="github" scheme="https://liphy.github.io/tags/github/"/>
    
      <category term="Hexo" scheme="https://liphy.github.io/tags/Hexo/"/>
    
      <category term="同步" scheme="https://liphy.github.io/tags/%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 主题推荐</title>
    <link href="https://liphy.github.io/about-hexo-theme/"/>
    <id>https://liphy.github.io/about-hexo-theme/</id>
    <published>2018-04-09T14:14:02.000Z</published>
    <updated>2019-03-05T08:18:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="当前主题-next"><a href="#当前主题-next" class="headerlink" title="当前主题 next"></a>当前主题 next</h3><p>项目地址 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p><p>该地址下有一些人基于此主题修改的主题也不错，有时间参考一下。</p><p>todo:</p><ul><li>头像</li><li>侧边栏</li><li>介绍</li><li>rss</li></ul><h3 id="一些不错的主题"><a href="#一些不错的主题" class="headerlink" title="一些不错的主题"></a>一些不错的主题</h3><p>在 Hexo 空域找到许多主题，不过需要时间挑选 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><p>待研究的主题：</p><p>Maupassant  <a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">https://github.com/tufu9441/maupassant-hexo</a></p><p>Tranquilpeak <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="noopener">https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;当前主题-next&quot;&gt;&lt;a href=&quot;#当前主题-next&quot; class=&quot;headerlink&quot; title=&quot;当前主题 next&quot;&gt;&lt;/a&gt;当前主题 next&lt;/h3&gt;&lt;p&gt;项目地址 &lt;a href=&quot;https://github.com/theme-nex
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://liphy.github.io/tags/Hexo/"/>
    
      <category term="theme" scheme="https://liphy.github.io/tags/theme/"/>
    
  </entry>
  
  <entry>
    <title>换机器</title>
    <link href="https://liphy.github.io/my-setup/"/>
    <id>https://liphy.github.io/my-setup/</id>
    <published>2018-04-09T13:52:02.000Z</published>
    <updated>2019-03-05T09:08:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前的办公机器实在是太慢了，大部分时间都是我在等它。</p><p>节前拿了另外一台有 SSD 的机器来用。这台机器实在是快，开机只需 5s 。</p><p>花了一天的时间把所有的资料都转移过来，接下来开始配置环境，装一些必需的软件。</p><ul><li>hexo 博客环境，node js, git, hexo</li><li>Sublime Text</li><li>PyCharm</li><li>python 及一些库</li><li>虚拟机，Ubuntu, CentOS, Windows 7 64bit</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前的办公机器实在是太慢了，大部分时间都是我在等它。&lt;/p&gt;
&lt;p&gt;节前拿了另外一台有 SSD 的机器来用。这台机器实在是快，开机只需 5s 。&lt;/p&gt;
&lt;p&gt;花了一天的时间把所有的资料都转移过来，接下来开始配置环境，装一些必需的软件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexo 
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://liphy.github.io/tags/python/"/>
    
      <category term="setup" scheme="https://liphy.github.io/tags/setup/"/>
    
  </entry>
  
  <entry>
    <title>2018 计划</title>
    <link href="https://liphy.github.io/2018-plan/"/>
    <id>https://liphy.github.io/2018-plan/</id>
    <published>2018-01-18T14:52:02.000Z</published>
    <updated>2019-03-05T08:01:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>1 月过半，我的计划还没有做好。想想 2017 年的计划执行情况，就有点害怕写计划。担心给自己挖了太大的坑，填坑累死人。</p><p>首先列几个计划的大方向，盘算之后慢慢完善：</p><h2 id="1-个人学习"><a href="#1-个人学习" class="headerlink" title="1. 个人学习"></a>1. 个人学习</h2><h3 id="专业技能"><a href="#专业技能" class="headerlink" title="专业技能"></a>专业技能</h3><p>虽然现在写出的本子面前能看，细节还是有许多亟待改进和优化的地方，比如遣词造句、文章逻辑结构、是否传达出明确的意义。这一块需要多向 Lee、Zhang 学习。</p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>去年刷完了基本 Python 书籍，基本照着课后习题做了，下半年忙于其他事情基本荒废，今年的计划是真正地开始写一些东西、解读他人的源码。</p><p>此处还需要：</p><ul><li>更多的进阶书籍</li><li>视频，比如黑马视频</li></ul><h2 id="2-读书"><a href="#2-读书" class="headerlink" title="2. 读书"></a>2. 读书</h2><h3 id="英文书"><a href="#英文书" class="headerlink" title="英文书"></a>英文书</h3><p>今年一定要认真读基本英文书籍，那种盲目的畏惧的心理真的是无意义。</p><p>每天早晨读 500 页，感觉非常棒，遇到的个别生词一点不影响对整个情节的理解，再加上 Kindle 自带的翻译，基本没有理解盲区。</p><ul><li>The Other Side Of Midnight, 大约 10 小时读完。</li></ul><h3 id="科技"><a href="#科技" class="headerlink" title="科技"></a>科技</h3><h3 id="关于日本的书"><a href="#关于日本的书" class="headerlink" title="关于日本的书"></a>关于日本的书</h3><h2 id="3-写作"><a href="#3-写作" class="headerlink" title="3. 写作"></a>3. 写作</h2><h3 id="灵感记录-Drafts"><a href="#灵感记录-Drafts" class="headerlink" title="灵感记录 Drafts"></a>灵感记录 Drafts</h3><p>Drafts 是 2017 年买的最值的 app，个人的几点用法：</p><ul><li><p>放在首屏，随时记录冒出来的灵感、想法。</p></li><li><p>开启角标，提示里面有需要整理的碎片，督促我清空 inbox。</p></li><li><p>借助按键扩展和 自定义 Actions，实现发送到 DayOne 或发布到博客，具体参考官方的 <a href="http://drafts4-actions.agiletortoise.com/" target="_blank" rel="noopener">Drafts Action Directory</a> 和少数派的 <a href="https://sspai.com/post/27127" target="_blank" rel="noopener">这篇文章</a> 和<a href="https://sspai.com/post/40229" target="_blank" rel="noopener">这篇</a>。</p></li></ul><h3 id="日记-DayOne"><a href="#日记-DayOne" class="headerlink" title="日记 DayOne"></a>日记 DayOne</h3><p>已经写了 340+ 篇日记，记录生活琐事，借助它的“那年今日”功能，可以回顾一下历史日记，记忆衰退 app 来补。</p><h2 id="4-购物"><a href="#4-购物" class="headerlink" title="4.购物"></a>4.购物</h2><p>消费主义日渐兴盛，买买买带来的快感尚可持续一时，但是带来的幸福感却影踪难觅。</p><p><strong>专注于通过购买提高生活质量以达到内心平和的消费行为。</strong></p><p>……</p><p>2018.1.18 初稿</p><p>2018.1.21 第一次补充</p><p>2018.1.25 第二次补充</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 月过半，我的计划还没有做好。想想 2017 年的计划执行情况，就有点害怕写计划。担心给自己挖了太大的坑，填坑累死人。&lt;/p&gt;
&lt;p&gt;首先列几个计划的大方向，盘算之后慢慢完善：&lt;/p&gt;
&lt;h2 id=&quot;1-个人学习&quot;&gt;&lt;a href=&quot;#1-个人学习&quot; class=&quot;he
      
    
    </summary>
    
    
    
      <category term="2018" scheme="https://liphy.github.io/tags/2018/"/>
    
      <category term="plan" scheme="https://liphy.github.io/tags/plan/"/>
    
      <category term="Reading" scheme="https://liphy.github.io/tags/Reading/"/>
    
      <category term="Writing" scheme="https://liphy.github.io/tags/Writing/"/>
    
  </entry>
  
  <entry>
    <title>在《Ingress》里打开另一张北京地图</title>
    <link href="https://liphy.github.io/Ingress-Beijing-map/"/>
    <id>https://liphy.github.io/Ingress-Beijing-map/</id>
    <published>2018-01-05T03:12:39.000Z</published>
    <updated>2019-03-05T08:00:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>via <a href="https://zhuanlan.zhihu.com/p/32557723" target="_blank" rel="noopener">在《Ingress》里打开另一张北京地图</a></p><p><strong>《Ingress》里的北京城，金融街、清华、阳台山、簋街，都被或蓝或绿的点，以及它们所连成的线段所覆盖。分为蓝绿两个阵营的玩家针锋相对，用自己的双脚，在现实地图上塑造了一个虚拟战场。这个AR游戏以一种意想不到的方式，将这个世界和玩家的生活联系到了一起。</strong></p><blockquote><p>作者丨张一天</p></blockquote><p>据我观察，我们北京人有个特点，只要面前摆上一张地图，甭管是中国地图、世界地图还是艾泽拉斯地图，一个真正的北京人都能沉浸在地图的世界里比比划划、指点江山，陶醉上个把小时是很正常的事情。</p><p>《Ingress》某种意义上把北京人的这种情怀变成了现实。分为蓝绿两个阵营的玩家针锋相对，用自己的双脚在北京的现实版图上塑造了一个新的虚拟战场。在《Ingress》里打开北京的地图，清华、北大、金融街、798都会被或蓝或绿的点，以及它们所连成的线段所覆盖。</p><p><img src="https://pic4.zhimg.com/50/v2-a96d42443ec017a8619c5a5f94d4a39f_hd.jpg" alt=""></p><p>用另一种方式看北京</p><p>在这个依靠双脚移动的游戏里，这些线条就是玩家们生活的轨迹。那些人来人往行色匆匆的地方，地图上蓝绿色点与线条往往会呈混沌状；而那些将其视为自己生活一部分的玩家用双脚走出来的形状，总有一丛带着奇妙的几何美感，犹如宝石切工般精致的线条覆盖于你所熟悉的地点之上。对于那些一手塑造了地图上蓝绿分野的格局，将自己名字与某个地域牢牢绑定在一起的玩家，我们会亲切地将其称为：大佬。</p><h2 id="丨-金融街——夜行生物的绝地反击"><a href="#丨-金融街——夜行生物的绝地反击" class="headerlink" title="丨　金融街——夜行生物的绝地反击"></a><strong>丨　金融街——夜行生物的绝地反击</strong></h2><p>从央行出发，路过中移动的总部大楼和新三板的门口，再向建行总部的方向绕个弯，顺着二环向北路过联通总部到达银监会、证监会和保监会，最后在金融街威斯汀拐弯向南，走太平桥大街回到出发点——在这条北京金融街的步行线路上，你会经常看到不少“西服革履”和“荣大快印手提袋”们步履匆匆。</p><p>比对一下《Ingress》的地图你会发现，这条线路正是蓝绿色点与线最为密集的地方。这些蓝蓝绿绿的点名叫“portal”，玩家们简称为“po”，锚定于现实中某个建筑、雕像或别的什么东西的GPS坐标，只有走到它们所在的位置才能与之互动。蓝军阵营的玩家占领它们后会显示为蓝色，反之为绿色。</p><p>北京金融街一带被公认为是绿军的地盘，每个工作日，绿色的线条会分别从位于中移动总部、北金所和平安大厦的三个po生长出来，用精工钻石般的线条覆盖整个金融街。蓝军则会在夜间和周末出动，将之还原成孤立的蓝色点。</p><p><img src="https://pic1.zhimg.com/50/v2-78e656fca755c2d1d1c3598b93581cff_hd.jpg" alt=""></p><p>北京金融街一带被公认为是绿军的地盘</p><p>《Ingress》里这些蓝绿线条的建立以一种名为钥匙的道具为基础：你首先要在a点处获得这个点的钥匙，然后亲自来到b点消耗a的钥匙建立a-b的连接。一旦三条连接形成一个闭合的三角形，就意味着你所在的阵营建立了一个“field”，即控制了被三角形覆盖的区域。每一条连接背后都是玩家的旅行，我曾经手过来自埃及的几百把钥匙，它们跟着乘坐国际航班的玩家辗转被送来北京，最后被一个北京玩家带去欧洲，交给当地玩家，让他们在地中海上建立起长达数百公里的战略性连接。</p><p>金融街这些短而致密的线条则是另一种情况，坐在金融街办公室里的玩家，每隔几分钟的冷却时间就可以获取一次某个po的钥匙——外来的玩家们则显然不可能在寒风中站一个小时做同样的事。他们下班或是午休时会巡视一遍附近密密麻麻的po群，让每个po与自己的工po（工作地点的po，对应的，床po就是睡觉地点的po）相连，再彼此连接形成无数个细小的field，从而在这个游戏冗长的升级之路上走得更快更轻松。这也是为什么地图上金融街的绿色线条看起来总是从某几个特定的点位上长出来的。</p><p>这种因为工作地点附带的福利甚至可以被用于辨认一个玩家是不是一个正经的“金融街土著”：系统会自动统计一个玩家玩游戏时走过的路程（是的，用腿），大部分玩家达到满级16级要走1000公里左右，而某位常驻金融街的绿军玩家升上16级时，这项数值还不到300公里，人送“宅男大佬”的雅号。坦白说，这帽子戴得有点冤，毕竟和金融街那几个昼伏夜出、摧毁敌方连接就回家的常驻蓝军相比，他还是勤快多了。</p><p>而在绿军“统治”了金融街的背景下，蓝军也没放弃过展示自己存在的努力。去年12月，包括我本人在内的十几位蓝军玩家从北京各地聚集到金融街，试图在西至南礼士路公园，北至证监会，东至西单民族文化宫这个覆盖面达到几平方公里的三角区里，在对应的游戏地图上画出一个涉及121个po、需要建立366条连接、组成364个field的复杂图形。</p><p><img src="https://pic3.zhimg.com/50/v2-0745659b7c7356c13e9333eeb5b8556f_hd.jpg" alt=""></p><p>蓝军的目标是，把这个对称的完美图形搬到金融街上</p><p>相比于绿军地头蛇们的手法，我们自信自己的方案具有更加对称的数学美感，代价则是建立过程中容错率极低，一旦受到敌军干扰几乎不可能进行补救。为了等待所有常驻绿军走远，也是为了准备所需要的钥匙，我们等到凌晨一点才开始动手。结局出人意料——常驻清华的绿军大佬何博士半夜出动，不知道从哪刷来一辆共享汽车，一个小时内就赶到了金融街，将我们即将完成的作品摧毁殆尽。</p><h2 id="丨-清华——何博士的千里追杀"><a href="#丨-清华——何博士的千里追杀" class="headerlink" title="丨　清华——何博士的千里追杀"></a><strong>丨　清华——何博士的千里追杀</strong></h2><p>《Ingress》这个游戏的硬核之处在于，对一个玩家来说，等级不重要，道具物资不重要，能在正确的时间出现在正确的地点很重要，能有队友的支持很重要。《Ingress》玩家提起某个人时一般还会冠上TA日常的活动地域，虽然何博士住在清华，平时在清华还不时能看到他从宿舍区某个po上射来的连接覆盖了半个学校，但“清华的何博士”这个称谓似乎还是有点贬低了何博士。</p><p>《Ingress》那个中二到让人脸酸的背景设定认为，凝结着人类文化的人类制品可以聚集来自异次元的神秘能量，大学校园是这种能量最集中的地区，因此会出现更多的po。翻译成人话就是，开发商Niantic认为大学校园开放又安全，因此鼓励玩家在大学里面创造更多的po，去大学校园里玩游戏。</p><p>因此，清北、北航等高校个个都是《Ingress》版图上的重镇，学生玩家也是《Ingress》圈一个举足轻重的群体。一般来讲，学生玩家和金融街的常驻们其实差不多，从进入游戏到满级几乎完全不用出校门，级别甚高但在校外没什么存在感的御宅族大佬比比皆是，愿意在游戏里与敌对阵营玩家结怨的在校生更是少之又少。</p><p>但何博士绝不是其中之一。</p><p>占地为王的地头蛇，四处扫荡的毁灭者，来往于荒郊野外的猎杀者，大新闻的策划与执行者，乃至于双方阵营在知乎等平台上互相挑衅的嘴炮担当，上面提到的这些角色我也都担任过，但是必须承认，何博士拉仇恨的手艺绝对高我一筹。何博士可能是北京蓝军最痛恨的对手，用漫画里的超级恶棍来比喻的话，我在对方的清单上顶多算是荒原狼的段位，而何博士在我们眼里简直就是小丑本丑了。</p><p>上一次和何博士的深夜遭遇战还是初秋，我们十几个人在清华“起8”（把当地的po建成只有8个以上玩家合力才能建立、能够产出高级道具但几乎没有防御力的特殊形态）时，被何博士逮个正着。于是这次行动变成了两辆车的精锐小分队带着何博士兜圈子的斗气之旅。</p><p><img src="https://pic3.zhimg.com/50/v2-3f221ad3d8dd93604c73d6112d8bb96b_hd.jpg" alt=""></p><p>北京西直门立交桥，“汝可识得此阵？”</p><p>每当我们驾车在一个地方停下占领一片po，何博士都能在十分钟之内骑车赶到并将之摧毁，何博士一个人骑车跟在两辆汽车后面一路追打，从清华打到学院路的北林、北语再打到西北三环的双榆树，最后的结局竟然是我在著名的西直门立交桥上走错路口，没有跟上前车走散所以各回各家。经此一役，随时出现、难缠如附骨之蛆的何博士和史诗级路痴的我同时在北京蓝军中声名远扬。</p><p>见到何博士更多时候是在北京周边，能够随时出动奔袭数百公里的何博士，曾经多次建立覆盖整个北京甚至大半个中国的field。游戏里有一项统计数据用于评价玩家建立过的field，被覆盖区域人口越多得分越高。覆盖北京全部城区的得分大概是500万——而何博士此项得分是26亿，相当于盖了500多次北京。</p><p><img src="https://pic3.zhimg.com/50/v2-d326ff1a845e06e9e8c85c921c48a9ae_hd.jpg" alt=""></p><p>跟何博士合影真的一点都不尴尬！</p><p>总之，当凌晨3点，聚拢在一家24小时营业茶餐厅的蓝军残兵败将们邀请何博士进来坐一坐时，气氛有一些微妙。在一番外交辞令式的亲切友好交流之后，白忙活一晚的蓝军取得了3项成果：何博士与在场蓝军合影一张；何博士负责将在场的清北蓝军送回学校，以及，何博士收下了我的“biocard”，我原本专门用它来嘲讽绿军，纪念他们当初“送”了我一块黑牌。</p><h2 id="丨-阳台山——成就猎手伤心之旅"><a href="#丨-阳台山——成就猎手伤心之旅" class="headerlink" title="丨　阳台山——成就猎手伤心之旅"></a><strong>丨　阳台山——成就猎手伤心之旅</strong></h2><p>biocard是一种《Ingress》玩家的专属名片，常见的biocard正面是玩家的肖像或漫画像，背面是自我介绍。有人喜欢用卡片来卖萌，有人喜欢在上面发狗粮，还有人干脆放上支付宝二维码求包养，我最初几个版本的biocard背面10行有8行是在自黑。但去年夏天拿到成就黑牌后，我专门制作了一款纪念版的biocard，用来嘲讽绿军这项丰功伟业。</p><p><img src="https://pic3.zhimg.com/50/v2-315e2911c7d2c2aa0e8077d4002662dd_hd.jpg" alt=""></p><p>去另一个城市玩ingress收到了海量biocard，这是一个保留节目</p><p>“成就”可能是《Ingress》里最臭名昭著的一个系统了，它要求一个玩家持续占领某个po达到150天，才能取得一个俗称“黑牌”的顶级成就勋章。由于在这个游戏里，使用了再多防御手段的po都可以被其他玩家使用被俗称为“毒”的道具一击必杀，因此能不能拿到这块黑牌，全看敌军愿不愿意为了对付你跑一趟。虽然游戏里还有另外18块黑牌可以通过慢慢积累的方式拿到，但这块名为“Guardian”的黑牌仍是玩家们最牵肠挂肚的存在。</p><p>理论上讲，游戏官方是禁止玩家使用爬虫之类的手段记录其他玩家的成就数据的，双方阵营的玩家也矢口否认有类似系统的存在，但一个客观的事实是，几乎每周都有不同阵营的玩家抱怨，自己已经持续占领超过140天的成就po惨遭敌军毒手。比如我自己，在最终功德圆满之前就曾经被打掉过135、142、145以及147天的成就po。</p><p>想要让自己的成就熬过150天，广撒网是一招。北京绿军有位被尊为“战神”的大佬，曾经走遍离北京市中心路程一百公里的远郊区平谷，占领了几十个po并长期维护，3个多月后被我拉着几个友军开车在一天之内全部清理干净，将近4个月后，两个绿军又跑去平谷从中午打到晚上9点多，把我留下的po清理干净；</p><p>选择定期封闭的位置也是一个办法。“战神”曾经占领位于北京顺义新国展内部的几个po。场馆再次开放举办展览是在几个月后，“战神”于是就有可能拿到黑牌，外围的距离又超过了“毒”的攻击范围，没法一击必杀，最后蓝军干脆出动了一车人马从远处集火攻击，以防对方充电支援被攻击的成就po；</p><p>把成就放在千里之外也是很多人会尝试的方法。前段时间北京有个蓝军飞往柬埔寨旅游，出发前被告知，要留意某个景点，有熟人留下的po——对不起，还是这位“战神”的。</p><p><img src="https://pic2.zhimg.com/50/v2-d7e438cd7cb36c1febea6205b4a13b06_hd.jpg" alt=""></p><p>可能是史上最得意忘形的biocard了</p><p>“战神”的遭遇是每一个没能在成名之前拿到黑牌的高级玩家命运的缩影。在《Ingress》上线运营的5年多里，两个阵营从未停止对敌方高级成员成就po的追杀，这也是为什么当我收到这块黑牌时会如此得意忘形：在第149天的时候，常驻地坛附近的绿军玩家“罗纳德”已经跨越大半个北京来到了我埋藏成就po的地方——位于西北六环外、海拔一千二百多米的阳台山风景区，可惜他算错了时间——上山时我还盯着149天的数字提心吊胆，而当他花了两个多小时与时断时续的信号作斗争，打完下山的时候，我已经收到成就提示，全城蓝军则纷纷在公共频道里留言恭喜了。</p><h2 id="丨-簋街——传奇般的磐石堡垒"><a href="#丨-簋街——传奇般的磐石堡垒" class="headerlink" title="丨　簋街——传奇般的磐石堡垒"></a><strong>丨　簋街——传奇般的磐石堡垒</strong></h2><p>我至今也没有搞清楚，罗纳德那天为什么主动请缨来爬山打我的成就，那真不是他擅长的事。他的根据地在北二环外，一处与地坛、国子监隔街对望的科技园里，北至地坛，南至簋街是他日常的作战半径。从地坛国子监到簋街再到东四，罗纳德和队友以簋街为核心，一起打造了北京最难啃的一个堡垒群。</p><p>一般来讲，当一个《Ingress》玩家说起“某地是蓝/绿军XX大佬的地盘”时，都是基于某种经验性的基础。玩家在《Ingress》版图上构筑的存在不管多么精巧复杂，都可以被敌对玩家摧毁，所谓的控制力来源于本地的大佬们坚持不懈地将一个地方重新连成同一个样子。以簋街为中心的这片区域则不然，这是一块真的很难啃下的骨头。</p><p><img src="https://pic4.zhimg.com/50/v2-6cfa7dcba44aff9e9f254aa0c989c459_hd.jpg" alt=""></p><p>独自清理掉这一片，是一个战斗人员的毕业大考</p><p>在北京像簋街这样某个阵营玩家极为集中的地方不少，但簋街玩家的“性格”绝对是独一份的。金融街绿军多，但他们巴不得蓝军把他们的field打掉好重连一波拿经验，798绿军也多，但他们只是默默跟在外来的蓝军后面收复失地，很少把798连得满满当当。簋街人则不一样，绿军的众多常驻玩家巡回值守，完全是以一种不惜血本的态度在和来犯的蓝军死磕。</p><p>所有零散po平日里会被装满各种防御性的道具这点就不说了，整个地区最传奇的当属绿军大佬E4位于北新桥某胡同的床po：蓝军随时前往攻击这个po都会有复数的绿军远程充电恢复其耐久度，有超过一半的几率会碰上E4本人或者他亲妈——没错，这也是一位满级玩家，在家现场补充顶级防御盾。E4和罗纳德甚至会日常性地用被称为“毒”的稀有道具摧毁自己连出无数field的床po、工po，只为了不让蓝军拿到这笔经验值。总之，能一个人把从雍和宫到东四的绿军目标全犁一个遍，在北京蓝军圈子里面算是“战斗人员”的毕业考试了。</p><p>像E4的床po这样传奇般的存在还能找到若干处：</p><p>西北五环百望山脚下有一对绿军夫妻常驻，其床po长期与远方的燕山山脉各处景区相连，是北京的一道战略屏障，蓝军需要覆盖北京时经常要派出多人对其强攻；</p><p>位于三里河的鸭王烤鸭店是蓝军大群群主，精神领袖老邓的家门口po，常年会有蓝军专程跑来加固防守——并将之连成一副乱七八糟的样子；</p><p>东四环慈云寺桥附近某小区里的一个po原先是之前提到过的“战神”床po，“战神”搬走后一个精于补位防守的蓝军玩家搬进这栋楼，一度成为当地绿军噩梦，甚至曾发生过三名绿军组团深夜前来突袭遭遇顽强防守最终只能用毒结束战斗的事迹。</p><h2 id="丨-用双脚书写的另类历史"><a href="#丨-用双脚书写的另类历史" class="headerlink" title="丨　用双脚书写的另类历史"></a><strong>丨　用双脚书写的另类历史</strong></h2><p>在我写这篇文章的时候，《Ingress》的世界里陆续发生了这样一些新闻：俄罗斯的绿军玩家出动了160多人，在12月的莫斯科用field在城市地图上画了一幅巨型国王肖像；觊觎南极大陆已久的新西兰蓝军终于如愿以偿，建立了一条长达三千多公里，从新西兰直通南极麦克默多科考站的link；东非和中东多地的蓝军玩家联手，建立了一系列横跨8个国家，在全球地图上也清晰可见的超级field；北京一名玩家因为受到全城的疏解整治波及而搬家，失去了自己的床po，正在等待于新家处申请的床po通过上线。</p><p>——你看，这就是《Ingress》这个自诩AR的游戏最有魅力的地方，它用一种让你意想不到的方式，把这个世界和玩家的生活联系在一起。被它增强的不是地图，而是你的生活本身。</p><p><em>原文链接：<a href="http://link.zhihu.com/?target=http%3A//www.chuapp.com/admin.php%3Fs%3DArticle/edit/id/284921">在《Ingress》里打开另一张北京版图</a></em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;via &lt;a href=&quot;https://zhuanlan.zhihu.com/p/32557723&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在《Ingress》里打开另一张北京地图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;《Ingress》里的北京城
      
    
    </summary>
    
    
    
      <category term="ingress" scheme="https://liphy.github.io/tags/ingress/"/>
    
  </entry>
  
  <entry>
    <title>my writing workflow</title>
    <link href="https://liphy.github.io/my-writing-workflow/"/>
    <id>https://liphy.github.io/my-writing-workflow/</id>
    <published>2018-01-05T02:12:39.000Z</published>
    <updated>2019-05-15T06:59:50.463Z</updated>
    
    <content type="html"><![CDATA[<p><strong>收集</strong></p><ul><li>Drafts 5 收集</li><li>typora 电脑上收集</li><li>Yu Writer 汇总</li></ul><p><strong>发布</strong></p><p>Hexo 发布</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;收集&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drafts 5 收集&lt;/li&gt;
&lt;li&gt;typora 电脑上收集&lt;/li&gt;
&lt;li&gt;Yu Writer 汇总&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;发布&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hexo 发布
      
    
    </summary>
    
    
    
      <category term="writing" scheme="https://liphy.github.io/tags/writing/"/>
    
      <category term="Hexo" scheme="https://liphy.github.io/tags/Hexo/"/>
    
      <category term="YuWriter" scheme="https://liphy.github.io/tags/YuWriter/"/>
    
      <category term="Dropbox" scheme="https://liphy.github.io/tags/Dropbox/"/>
    
      <category term="Github" scheme="https://liphy.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>读林清玄散文</title>
    <link href="https://liphy.github.io/essay-of-linqingxuan/"/>
    <id>https://liphy.github.io/essay-of-linqingxuan/</id>
    <published>2018-01-04T14:52:02.000Z</published>
    <updated>2019-03-05T09:10:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在读林清玄的《人间有味是清欢》，一本有关生活的感悟的散文集。</p><p>2017年已经读的书多属于科技、历史、虚构小说类型。对于散文，多年未读。</p><p>读来，不免以理工科的思维在脑中浅浅地推敲句子，不时嘀咕 “这一句不合理，完全唯心。”</p><p>经过这么”理性“地剖解，一篇美丽的散文变得不那么浪漫，破坏了散文带来的美感体验。</p><blockquote><p>读散文莫理性</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在读林清玄的《人间有味是清欢》，一本有关生活的感悟的散文集。&lt;/p&gt;
&lt;p&gt;2017年已经读的书多属于科技、历史、虚构小说类型。对于散文，多年未读。&lt;/p&gt;
&lt;p&gt;读来，不免以理工科的思维在脑中浅浅地推敲句子，不时嘀咕 “这一句不合理，完全唯心。”&lt;/p&gt;
&lt;p&gt;经过这
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://liphy.github.io/tags/reading/"/>
    
      <category term="essay" scheme="https://liphy.github.io/tags/essay/"/>
    
  </entry>
  
  <entry>
    <title>利用KindleEar搭建免费的Kindle新闻推送系统</title>
    <link href="https://liphy.github.io/push-to-Kindle-with-KindleEar/"/>
    <id>https://liphy.github.io/push-to-Kindle-with-KindleEar/</id>
    <published>2018-01-04T14:52:02.000Z</published>
    <updated>2019-03-05T08:10:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>2180104 Thu</p><p>使用 Hexo + Github Pages 搭建个人博客</p><p>参考 </p><ol><li><p><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p></li><li><p><a href="https://note.leodev.me/2016/09/01/Hexo-3-1-1-Staic-Blog-Build-Guide/" target="_blank" rel="noopener">Hexo 3.1.1 静态博客搭建指南</a></p></li></ol><h1 id="系统环境配置"><a href="#系统环境配置" class="headerlink" title="系统环境配置"></a>系统环境配置</h1><p>要使用Hexo，需要在你的系统中支持Nodejs以及Git，如果还没有，那就开始安装吧！</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><a href="https://nodejs.org/download/" target="_blank" rel="noopener">下载Node.js</a><br>参考地址：<a href="http://www.w3cschool.cc/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">http://git-scm.com/download/</a></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ cd d:/liphy-blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ hexo init blog # blog 为 liphy-blog 下的子目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ cd blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ npm install</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$ hexo g # 或者hexo generate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看</span></pre></td></tr></tbody></table></figure><p>这里有必要提下Hexo常用的几个命令：</p><ol><li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li><li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li><li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</li></ol><p>另外还有其他几个常用命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new "postName" #新建文章</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo new page "pageName" #新建页面</span></pre></td></tr></tbody></table></figure><p>常用简写</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo n == hexo new</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo g == hexo generate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ hexo s == hexo server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ hexo d == hexo deploy</span></pre></td></tr></tbody></table></figure><p>常用组合</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo d -g #生成部署</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo s -g #生成预览</span></pre></td></tr></tbody></table></figure><h1 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo clean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next blog/themes/next</span></pre></td></tr></tbody></table></figure><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><p>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为next。</p><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><p>更改主题后必须 <strong>生成、更新：    </strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ cd themes/yilia</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ git pull</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ hexo s # 启动本地web服务器</span></pre></td></tr></tbody></table></figure><p>现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 可以看到有了 next 主题的博客：        </p><p><img src="$res/Screenshot-2018-1-4%20Hexo.png" alt="Screenshot-2018-1-4 Hexo"></p><h1 id="Github-Pages-设置"><a href="#Github-Pages-设置" class="headerlink" title="Github Pages 设置"></a>Github Pages 设置</h1><h2 id="创建自己的-Github-Pages"><a href="#创建自己的-Github-Pages" class="headerlink" title="创建自己的 Github Pages"></a>创建自己的 Github Pages</h2><p>略 liphy.github.io</p><p><a href="http://pchou.info/web-build/2013/01/03/build-github-blog-page-01.html" target="_blank" rel="noopener">一步步在GitHub上创建博客主页 全系列</a></p><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p><h1 id="部署-Hexo-到-Github-Pages"><a href="#部署-Hexo-到-Github-Pages" class="headerlink" title="部署 Hexo 到 Github Pages"></a>部署 Hexo 到 Github Pages</h1><p>首先需要明白所谓部署到github的原理。</p><ol><li><p>之前步骤中在Github上创建的那个特别的repo（jiji262.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接 liphy.github.io 来直接访问。</p></li><li><p>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</p></li><li><p>需要将hexo生成的静态网站，提交(git commit)到github上。</p></li></ol><p>明白了原理，怎么做自然就清晰了。</p><h1 id="使用hexo-deploy部署"><a href="#使用hexo-deploy部署" class="headerlink" title="使用hexo deploy部署"></a>使用hexo deploy部署</h1><p>hexo deploy可以部署到很多平台，具体可以<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">参考这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：    </p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  repo: git@github.com:jiji262/jiji262.github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></tbody></table></figure><p>然后在命令行中执行</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></tbody></table></figure><p>即可部署。</p><hr><p>注意 问题 </p><h1 id="hexo问题"><a href="#hexo问题" class="headerlink" title="hexo问题"></a>hexo问题</h1><blockquote><ol><li>先<code>hexo g</code>再执行<code>hexo d</code>布署，也可使直接用<code>hexo d -g</code></li></ol></blockquote><blockquote><ol><li>hexo 更新到3.0之后，deploy的type 的github需要改成<code>git</code></li></ol></blockquote><blockquote><ol><li>在执行 hexo deploy 后,出现 error deployer not found:git 的错误处理</li></ol></blockquote><p>输入代码：</p><p><code>npm install hexo-deployer-git --save</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2180104 Thu&lt;/p&gt;
&lt;p&gt;使用 Hexo + Github Pages 搭建个人博客&lt;/p&gt;
&lt;p&gt;参考 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://linghucong.js.org/2016/04/15/2016-04-15-hexo
      
    
    </summary>
    
    
    
      <category term="blog" scheme="https://liphy.github.io/tags/blog/"/>
    
      <category term="github" scheme="https://liphy.github.io/tags/github/"/>
    
      <category term="Hexo" scheme="https://liphy.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用 Hexo + Github Pages 搭建个人博客</title>
    <link href="https://liphy.github.io/hexo-github-Blog/"/>
    <id>https://liphy.github.io/hexo-github-Blog/</id>
    <published>2018-01-04T14:52:00.000Z</published>
    <updated>2019-12-09T07:52:16.693Z</updated>
    
    <content type="html"><![CDATA[<p>2180104,Thu update:</p><p>使用 Hexo + Github Pages 搭建个人博客</p><p>参考  <a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener"># 手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p><p>20190215 update:</p><p><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a></p><h2 id="系统环境配置"><a href="#系统环境配置" class="headerlink" title="系统环境配置"></a>系统环境配置</h2><p>要使用Hexo，需要在你的系统中支持Nodejs以及Git，如果还没有，那就开始安装吧！</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><a href="https://nodejs.org/download/" target="_blank" rel="noopener">下载Node.js</a><br>参考地址：<a href="http://www.w3cschool.cc/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">http://git-scm.com/download/</a></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ cd d:/liphy-blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ hexo init blog # blog 为 liphy-blog 下的子目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ cd blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ npm install</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$ hexo g # 或者hexo generate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看</span></pre></td></tr></tbody></table></figure><p>这里有必要提下Hexo常用的几个命令：</p><ol><li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li><li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li><li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</li></ol><p>另外还有其他几个常用命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new "postName" #新建文章</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo new page "pageName" #新建页面</span></pre></td></tr></tbody></table></figure><p>常用简写</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo n == hexo new</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo g == hexo generate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ hexo s == hexo server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ hexo d == hexo deploy</span></pre></td></tr></tbody></table></figure><p>常用组合</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo d -g #生成部署</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ hexo s -g #生成预览</span></pre></td></tr></tbody></table></figure><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo clean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next blog/themes/next</span></pre></td></tr></tbody></table></figure><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为next。</p><h3 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h3><p>更改主题后必须 <strong>生成、更新：    </strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ cd themes/yilia</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ git pull</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ hexo s # 启动本地web服务器</span></pre></td></tr></tbody></table></figure><p>现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 可以看到有了 next 主题的博客：        </p><p><img src="$res/Screenshot-2018-1-4%20Hexo.png" alt="Screenshot-2018-1-4 Hexo"></p><h2 id="Github-Pages-设置"><a href="#Github-Pages-设置" class="headerlink" title="Github Pages 设置"></a>Github Pages 设置</h2><h3 id="创建自己的-Github-Pages"><a href="#创建自己的-Github-Pages" class="headerlink" title="创建自己的 Github Pages"></a>创建自己的 Github Pages</h3><p>略 liphy.github.io</p><p><a href="http://pchou.info/web-build/2013/01/03/build-github-blog-page-01.html" target="_blank" rel="noopener">一步步在GitHub上创建博客主页 全系列</a></p><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p><h2 id="部署-Hexo-到-Github-Pages"><a href="#部署-Hexo-到-Github-Pages" class="headerlink" title="部署 Hexo 到 Github Pages"></a>部署 Hexo 到 Github Pages</h2><p>首先需要明白所谓部署到github的原理。</p><ol><li><p>之前步骤中在Github上创建的那个特别的repo（jiji262.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接 liphy.github.io 来直接访问。</p></li><li><p>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</p></li><li><p>需要将hexo生成的静态网站，提交(git commit)到github上。</p></li></ol><p>明白了原理，怎么做自然就清晰了。</p><h2 id="使用hexo-deploy部署"><a href="#使用hexo-deploy部署" class="headerlink" title="使用hexo deploy部署"></a>使用hexo deploy部署</h2><p>hexo deploy可以部署到很多平台，具体可以<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">参考这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：    </p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  repo: git@github.com:jiji262/jiji262.github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></tbody></table></figure><p>然后在命令行中执行</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></tbody></table></figure><p>即可部署。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="error-deployer-not-found-git-错误"><a href="#error-deployer-not-found-git-错误" class="headerlink" title="error deployer not found:git 错误"></a>error deployer not found:git 错误</h3><ol><li>在执行 hexo deploy 后,出现 error deployer not found:git 的错误处理</li></ol><p>输入代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></tbody></table></figure><h3 id="No-such-device-or-address-错误"><a href="#No-such-device-or-address-错误" class="headerlink" title="No such device or address 错误"></a>No such device or address 错误</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">bash: /dev/tty: No such device or address</span></pre></td></tr></tbody></table></figure><p>解决方法：</p><p>_config.yml 设置：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    repo: git@github.com:[username]/[username].github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    branch: master</span></pre></td></tr></tbody></table></figure><h3 id="ERROR-Local-hexo-not-found-in-D-hexo"><a href="#ERROR-Local-hexo-not-found-in-D-hexo" class="headerlink" title="ERROR Local hexo not found in D:\hexo"></a>ERROR Local hexo not found in D:\hexo</h3><p>导致这个原因为在自己的博客文件夹中,.gitignore文件中添加了node_modules/,导致更新的时候,这个文件夹被忽略,没有被更新上去。</p><p>解决方案:</p><p>  1.cmd 进入博客当前文件夹路径</p><p>  2.执行 npm install</p><p>  3.再执行 hexo server</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2180104,Thu update:&lt;/p&gt;
&lt;p&gt;使用 Hexo + Github Pages 搭建个人博客&lt;/p&gt;
&lt;p&gt;参考  &lt;a href=&quot;https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-
      
    
    </summary>
    
    
    
      <category term="blog" scheme="https://liphy.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="https://liphy.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://liphy.github.io/tags/github/"/>
    
  </entry>
  
</feed>
